name: CI-CD

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  Test-Lint:
    name: Test - Linters
    runs-on: ubuntu-latest
    steps:
      - name: Print GitHub event action
        run: |
          echo '${{ github.event.action }}'
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm ci
      
      - name: Lint
        run: 'npm run format && npm run lint'

  Test-Unit:
    name: Test - Unit
    runs-on: ubuntu-latest
    steps:
      - name: Print GitHub event action
        run: |
          echo '${{ github.event.action }}'
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm ci
      
      - name: Unit Tests
        run: 'npm run test:ci'

      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: unit-coverage-report
          path: jest-coverage/lcov-report/

  Test-Infrastructure:
    name: Test - Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Dependencies
        run: npm ci

      - name: Build CDK
        run: npm run cdk:build

      - name: Nag CDK
        run: npm run cdk synth

  Test-e2e-electron:
    name: Test - e2e - Electron
    needs: [Test-Lint, Test-Unit, Test-Infrastructure]
    runs-on: ubuntu-latest
    env:
      NEXTAUTH_URL: 'http://${{ secrets.NEXTAUTH_URL }}'
      GITHUB_ID: '${{ secrets.PROVIDER_GITHUB_ID }}'
      GITHUB_SECRET: '${{ secrets.PROVIDER_GITHUB_SECRET }}'
      INSTRUMENT_COVERAGE: true
    steps:
      - name: Print GitHub event action
        run: |
          echo '${{ github.event.action }}'
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: 'npm run build'
      
      - name: Test - End to End
        run: 'npm run e2e:headless'

      - name: Test - Check Coverage
        run: 'npm run nyc:coverage'

      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: e2e-electron-coverage-report
          path: cypress-coverage/lcov-report/

  Test-e2e-chrome:
    name: Test - e2e - Chrome
    needs: [Test-Lint, Test-Unit, Test-Infrastructure]
    runs-on: ubuntu-latest
    env:
      NEXTAUTH_URL: 'http://${{ secrets.NEXTAUTH_URL }}'
      GITHUB_ID: '${{ secrets.PROVIDER_GITHUB_ID }}'
      GITHUB_SECRET: '${{ secrets.PROVIDER_GITHUB_SECRET }}'
      INSTRUMENT_COVERAGE: true
    steps:
      - name: Print GitHub event action
        run: |
          echo '${{ github.event.action }}'
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: 'npm run build'
      
      - name: Test - End to End - Chrome
        run: 'npm run e2e:headless:chrome'

      - name: Test - Check Coverage
        run: 'npm run nyc:coverage'

      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: e2e-chrome-coverage-report
          path: cypress-coverage/lcov-report/       

  Test-e2e-firefox:
    name: Test - e2e - Firefox
    needs: [Test-Lint, Test-Unit, Test-Infrastructure]
    runs-on: ubuntu-latest
    env:
      NEXTAUTH_URL: 'http://${{ secrets.NEXTAUTH_URL }}'
      GITHUB_ID: '${{ secrets.PROVIDER_GITHUB_ID }}'
      GITHUB_SECRET: '${{ secrets.PROVIDER_GITHUB_SECRET }}'
      INSTRUMENT_COVERAGE: true
    steps:
      - name: Print GitHub event action
        run: |
          echo '${{ github.event.action }}'
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: 'npm run build'
      
      - name: Test - End to End - Firefox
        run: 'npm run e2e:headless:firefox'

      - name: Test - Check Coverage
        run: 'npm run nyc:coverage'

      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: e2e-firefox-coverage-report
          path: cypress-coverage/lcov-report/               
        

  deploy-to-dev:
    name: Deploy to Development
    if: (github.event.release.prerelease == true && contains(github.event.release.tag_name,'alpha'))
    needs: [Test-Lint, Test-Unit, Test-Infrastructure, Test-e2e-firefox, Test-e2e-electron, Test-e2e-chrome]
    env:
      NEXTAUTH_URL: 'http://dev.${{ secrets.NEXTAUTH_URL }}'
      GITHUB_ID: '${{ secrets.PROVIDER_GITHUB_ID }}'
      GITHUB_SECRET: '${{ secrets.PROVIDER_GITHUB_SECRET }}'
      INSTRUMENT_COVERAGE: false
    runs-on: ubuntu-latest
    environment:
      name: Development
      url: $NEXTAUTH_URL
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Dependencies
        run: npm ci

      - name: CDK Deploy
        run: 'npm run cdk -- deploy -c siteSubDomain=cdk-dev -c region=us-east-1 --require-approval never'

  deploy-to-stage:
    name: Deploy to Staging
    if: (github.event.release.prerelease == true && contains(github.event.release.tag_name,'beta'))
    needs: [Test-Lint, Test-Unit, Test-Infrastructure, Test-e2e-firefox, Test-e2e-electron, Test-e2e-chrome]
    env:
      NEXTAUTH_URL: 'http://stage.${{ secrets.NEXTAUTH_URL }}'
      GITHUB_ID: '${{ secrets.PROVIDER_GITHUB_ID }}'
      GITHUB_SECRET: '${{ secrets.PROVIDER_GITHUB_SECRET }}'
      INSTRUMENT_COVERAGE: false
    runs-on: ubuntu-latest
    environment:
      name: Staging
      url: $NEXTAUTH_URL
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Dependencies
        run: npm ci

      - name: CDK Deploy
        run: 'npm run cdk -- deploy -c siteSubDomain=cdk-stage -c region=us-east-1 --require-approval never'

  deploy-to-production:
    name: Deploy to Production
    if: (github.event_name == 'release' && github.event.release.prerelease != true)
    needs: [Test-Lint, Test-Unit, Test-Infrastructure, Test-e2e-firefox, Test-e2e-electron, Test-e2e-chrome]
    env:
      NEXTAUTH_URL: 'http://${{ secrets.NEXTAUTH_URL }}'
      GITHUB_ID: '${{ secrets.PROVIDER_GITHUB_ID }}'
      GITHUB_SECRET: '${{ secrets.PROVIDER_GITHUB_SECRET }}'
      INSTRUMENT_COVERAGE: false
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: $NEXTAUTH_URL
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Dependencies
        run: npm ci

      - name: CDK Deploy
        run: 'npm run cdk -- deploy -c siteSubDomain=cdk -c region=us-east-1 --require-approval never'
